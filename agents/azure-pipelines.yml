name: 0.0.$(Rev:r)

trigger:
  batch: true
  branches:
    include:
      - main

variables:
  - group: ado-vmss-pool
  - name: DEBIAN_FRONTEND
    value: noninteractive
  - name: TF_IN_AUTOMATION
    value: true

stages:
  - stage: 'bootstrap'
    pool: 'ado-vmss-pool-bootstrap'
    jobs:
      - job: 
        displayName: 'Generate Agent Image'
        timeoutInMinutes: 600
        cancelTimeoutInMinutes: 30
        variables:
          agents_folder: './agents'
        steps:
          - checkout: self
            fetchDepth: 1

          - task: Bash@3
            displayName: 'Install Tools'
            inputs:
              targetType: 'inline'
              script: |
                set -euo pipefail
                
                INSTALLER_FOLDER="${AGENTS_FOLDER}/bootstrap/scripts/installers"
                chmod -Rv 777 "${INSTALLER_FOLDER}/"
                
                declare -a SCRIPTS=(
                                    "azure-cli.sh"
                                    "basic.sh"
                                    "packer.sh"
                                    "terraform.sh"
                                    )
                
                for SCRIPT in "${SCRIPTS[@]}"
                do
                  sudo -E sh -c "${INSTALLER_FOLDER}/${SCRIPT}"
                done

          - task: AzureCLI@2
            displayName: 'Build Agent Image Version'
            inputs:
              azureSubscription: 'Azure'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                set -euo pipefail

                TEMPLATE_PATH="${AGENTS_FOLDER}/agent.json"
                AZURE_SUBSCRIPTION=$(az account show --query 'id' -o tsv)

                echo "Show Packer Version"
                packer --version

                echo "Sanity Check"
                packer validate -syntax-only ${TEMPLATE_PATH}
                
                echo "Build VM Image"
                packer build \
                  -var "client_id=${servicePrincipalId}" \
                  -var "client_secret=${servicePrincipalKey}" \
                  -var "managed_image_name=agent" \
                  -var "managed_image_resource_group_name=${AZURE_RESOURCE_GROUP_IMAGES}" \
                  -var "location=${AZURE_LOCATION}" \
                  -var "sig_image_version=$(Build.BuildNumber)" \
                  -var "subscription_id=${AZURE_SUBSCRIPTION}" \
                  -var "tenant_id=${tenantId}" \
                  ${TEMPLATE_PATH}
              addSpnToEnvironment: true

          - task: AzureCLI@2
            displayName: 'Cleanup'
            inputs:
              azureSubscription: 'Azure'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                set -euo pipefail

                AZURE_SUBSCRIPTION=$(az account show --query 'id' -o tsv)

                  az image delete \
                    --name custom \
                    --resource-group ${AZURE_RESOURCE_GROUP_IMAGES} \
                    --subscription ${AZURE_SUBSCRIPTION}
              addSpnToEnvironment: false
